import { type NextPage } from 'next'
import Head from 'next/head'
import { prisma } from '../server/db'
import { getSession } from 'next-auth/react'
import DashboardFooter from '~/components/DashboardFooter'
import { today } from '~/utils/dateUtils'
import ExclusiveForYou from '~/components/MarketPlace/ExclusiveForYou'
import FeaturedProducts from '~/components/MarketPlace/FeaturedProducts'
import type { Product } from '@prisma/client'

const Marketplace: NextPage<{
  featuredProducts: Product[]
  exclusiveForYouProducts: Product[]
}> = ({ featuredProducts, exclusiveForYouProducts }) => {
  return (
    <>
      <Head>
        <title>Macrovesta</title>
        <meta name="description" content="Generated by Macrovesta" />
        <link rel="icon" href="/favicon.ico" />
        <script src="/static/datafeeds/udf/dist/bundle.js" async />
        <link rel="alternate" hrefLang="en" href="https://www.macrovesta.ai" />
        <link rel="alternate" hrefLang="pt-br" href="https://pt-br.macrovesta.ai" />
        <link rel="alternate" hrefLang="es" href="https://es.macrovesta.ai" />
        <link rel="alternate" hrefLang="tr" href="https://tr.macrovesta.ai" />
        <link rel="alternate" hrefLang="th" href="https://th.macrovesta.ai" />
      </Head>
      <main className="main h-full items-center bg-slate-200 ">
        <ExclusiveForYou exclusiveForYouProducts={exclusiveForYouProducts}></ExclusiveForYou>
        <FeaturedProducts featuredProducts={featuredProducts}></FeaturedProducts>
        <DashboardFooter />
      </main >
    </>
  )
}

export const getServerSideProps = async (context: any) => {
  const session = await getSession({ req: context.req })

  if (!session || session?.access_to_marketplace !== true) {
    return {
      redirect: {
        permanent: false,
        destination: '/'
      }
    }
  }

  const featuredProducts = JSON.parse(JSON.stringify(await prisma?.product.findMany({
    where: {
      reserved_by: null,
      expiry_date: {
        gt: today
      }
    }
  })))

  console.log(featuredProducts)

  const exclusiveForYouProducts = JSON.parse(JSON.stringify(await prisma?.productBuyer.findMany({
    where: {
      buyer_id: session?.user?.id
    },
    include: {
      product: true
    }
  }))).map((item: { product: Product }) => item.product)

  console.log(exclusiveForYouProducts)

  return {
    props: { featuredProducts, exclusiveForYouProducts }
  }
}

export default Marketplace
